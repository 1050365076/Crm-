<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xy.work.crm.dao.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.xy.work.crm.vo.UserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, role_id, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="countUserRoleByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select  count(1) from t_user_role where user_id = #{userId}
  </select>

  <delete id="deleteUserRoleByUserId" parameterType="java.lang.Integer">
    delete from t_user_role where user_id = #{userId}
  </delete>


  <select id="countUserRoleByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select  count(1) from t_user_role where role_id = #{roleId}
  </select>

  <delete id="deleteUserRoleByRoleId" parameterType="java.lang.Integer">
    delete from t_user_role where role_id = #{roleId}
  </delete>

  <insert id="insert" parameterType="com.xy.work.crm.vo.UserRole" >
    insert into t_user_role (id, user_id, role_id,
      create_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xy.work.crm.vo.UserRole" >
    insert into t_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xy.work.crm.vo.UserRole" >
    update t_user_role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" parameterType="list">
    insert into t_user_role(user_id,role_id,create_date,update_date) values
    <foreach collection="list" item="item" separator=",">
        (#{item.userId},#{item.roleId},#{item.createDate},#{item.updateDate})
    </foreach>

  </insert>



</mapper>
